{"version":3,"sources":["logo.svg","components/Navbar.js","api/Api.js","components/MyCard.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","AppBar","position","Toolbar","IconButton","color","Typography","API_KEY","MyCard","match","useState","detail","setDatail","open","setOpen","showDetailBtnClicked","id","url","fetch","then","response","json","catch","error","console","log","getMatchDetail","data","handleClickOpen","handleClose","type","Card","style","background","matchStarted","marginTop","CardContent","Grid","container","justify","alignItems","spacing","item","variant","width","src","alt","CardActions","Button","onClick","marginLeft","Date","dateTimeGMT","toLocaleString","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","stat","fontStyle","fontWeight","score","DialogActions","autoFocus","App","matches","setMatches","useEffect","getMatches","className","sm","map","unique_id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c71ab0b2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core';\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport React from 'react';\nconst Navbar=()=>{\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n               <IconButton color =\"inherit\">\n                   <MenuIcon />\n               </IconButton>\n                <Typography>Live score</Typography>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nexport default Navbar;","const API_KEY = \"Xo5iOkCRqAZFDO3gLtKuAPl7mg62\"\n\n//get all upcoming matches\n\nexport const getMatches=()=>{\n    const url = `https://cricapi.com/api/matches?apikey=${API_KEY}`;\n    console.log(\"URL\", url);\n    return fetch(url)\n      .then((response) => response.json())\n      .catch((error)=>console.log(\"ERROR : \",error));\n}\n\n//load match details\nexport const getMatchDetail = (id) => {\n  const url = `https://cricapi.com/api/cricketScore?apikey=${API_KEY}&unique_id=${id}`;\n\n  return fetch(url).then(response=>response.json().catch(error=>console.log(error)))\n}","import React, { useState } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport { getMatchDetail } from \"../api/Api\";\n\nconst MyCard = ({ match }) => {\n  const [detail, setDatail] = useState({});\n  const [open, setOpen] = useState(false);\n\n  const getMatchCard = () => (\n    <div>\n      <Card\n        style={{\n          background: match.matchStarted ? \"#e2e2e2\" : \"\",\n          marginTop: 15,\n        }}\n      >\n        <CardContent>\n          <Grid container justify=\"center\" alignItems=\"center\" spacing={4}>\n            <Grid item>\n              <Typography variant=\"h5\">{match[\"team-1\"]}</Typography>\n            </Grid>\n            <Grid item>\n              <img\n                style={{ width: 85 }}\n                src=\"http://www.pngall.com/wp-content/uploads/5/Combat-Versus-PNG-Free-Download.png\"\n                alt=\"\"\n              />\n            </Grid>\n            <Grid item>\n              <Typography variant=\"h5\">{match[\"team-2\"]}</Typography>\n            </Grid>\n          </Grid>\n        </CardContent>\n\n        <CardActions>\n          <Grid container justify=\"center\">\n            <Button\n              onClick={() => {\n                showDetailBtnClicked(match[\"unique_id\"]);\n              }}\n              variant=\"outlined\"\n              color=\"secondary\"\n            >\n              Show Detail\n            </Button>\n            <Button\n              style={{ marginLeft: 5 }}\n              variant=\"outlined\"\n              color=\"primary\"\n            >\n              Starting time {new Date(match.dateTimeGMT).toLocaleString()}\n            </Button>\n          </Grid>\n        </CardActions>\n      </Card>\n    </div>\n  );\n\n  const showDetailBtnClicked = (id) => {\n    getMatchDetail(id)\n      .then((data) => {\n        console.log(data);\n        setDatail(data);\n        handleClickOpen();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n    return (\n        <>\n          {match.type == \"Twenty20\" ? getMatchCard() : \"\"}\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Match Detail...\"}</DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                <Typography>{detail.stat}</Typography>\n                <Typography>\n                  Match\n                  <span style={{ fontStyle: \"italic\", fontWeight: \"bold\" }}>\n                    {detail.matchStarted ? \"Started\" : \"Still not started\"}\n                  </span>\n                </Typography>\n                <Typography>\n                  Score\n                  <span style={{ fontStyle: \"italic\", fontWeight: \"bold\" }}>\n                    {\" \"}\n                    {detail.score}\n                  </span>\n                </Typography>\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose} color=\"primary\" autoFocus>\n                Close\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </>\n      );\n    };\n    \n    export default MyCard;","import logo from './logo.svg';\nimport './App.css';\nimport { Button, Grid, Typography } from '@material-ui/core';\nimport Navbar from './components/Navbar';\nimport { getMatches } from \"./api/Api\";\nimport { Fragment, useEffect, useState } from 'react';\nimport MyCard from './components/MyCard';\n\nfunction App() {\n  const [matches,setMatches] = useState([]);\n\n  useEffect(() => {\n    getMatches()\n      .then((data) => {\n        console.log(data);\n        setMatches(data.matches);\n      })\n      .catch((error) => {});\n  }, []);\n\n\n\n  return (\n    <div className=\"App\">\n      <Navbar></Navbar>\n      <Typography variant=\"h3\">Welcome to my app</Typography>\n      <Grid container>\n        <Grid sm=\"2\"></Grid>\n        <Grid sm=\"8\" >\n          {matches.map((match)=>(\n            <Fragment key={match.unique_id}>\n            {match.type == \"Twenty20\" ? (<MyCard key={match.unique_id} match={match} />) : (\"\")}\n            </Fragment>\n          ))} \n        </Grid>\n      </Grid> \n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}